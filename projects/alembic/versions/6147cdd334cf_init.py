"""init

Revision ID: 6147cdd334cf
Revises: 
Create Date: 2023-08-10 12:06:40.123766

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision = '6147cdd334cf'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ObjectStatus',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ObjectStatus_id'), 'ObjectStatus', ['id'], unique=False)
    op.create_table('ProjectStatus',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ProjectStatus_id'), 'ProjectStatus', ['id'], unique=False)
    op.create_table('WorkType',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_WorkType_id'), 'WorkType', ['id'], unique=False)
    op.create_table('Project',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('order_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('curator_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('creator_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('customer_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('start_date_planned', sa.DateTime(), nullable=True),
    sa.Column('complete_date_planned', sa.DateTime(), nullable=True),
    sa.Column('start_date_real', sa.DateTime(), nullable=True),
    sa.Column('complete_date_real', sa.DateTime(), nullable=True),
    sa.Column('admin_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('status_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['status_id'], ['ProjectStatus.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Project_id'), 'Project', ['id'], unique=False)
    op.create_table('Subproject',
    sa.Column('towers', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('spans', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pl_segment_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('start_date_planned', sa.DateTime(), nullable=True),
    sa.Column('complete_date_planned', sa.DateTime(), nullable=True),
    sa.Column('start_date_real', sa.DateTime(), nullable=True),
    sa.Column('complete_date_real', sa.DateTime(), nullable=True),
    sa.Column('workers', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('work_type_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('project_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('status_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['Project.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['ProjectStatus.id'], ),
    sa.ForeignKeyConstraint(['work_type_id'], ['WorkType.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Subproject_id'), 'Subproject', ['id'], unique=False)
    op.create_table('SpanEntity',
    sa.Column('wires', sa.JSON(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('subproject_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('status_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['status_id'], ['ObjectStatus.id'], ),
    sa.ForeignKeyConstraint(['subproject_id'], ['Subproject.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_SpanEntity_id'), 'SpanEntity', ['id'], unique=False)
    op.create_table('TowerEntity',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('subproject_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('status_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['status_id'], ['ObjectStatus.id'], ),
    sa.ForeignKeyConstraint(['subproject_id'], ['Subproject.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_TowerEntity_id'), 'TowerEntity', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_TowerEntity_id'), table_name='TowerEntity')
    op.drop_table('TowerEntity')
    op.drop_index(op.f('ix_SpanEntity_id'), table_name='SpanEntity')
    op.drop_table('SpanEntity')
    op.drop_index(op.f('ix_Subproject_id'), table_name='Subproject')
    op.drop_table('Subproject')
    op.drop_index(op.f('ix_Project_id'), table_name='Project')
    op.drop_table('Project')
    op.drop_index(op.f('ix_WorkType_id'), table_name='WorkType')
    op.drop_table('WorkType')
    op.drop_index(op.f('ix_ProjectStatus_id'), table_name='ProjectStatus')
    op.drop_table('ProjectStatus')
    op.drop_index(op.f('ix_ObjectStatus_id'), table_name='ObjectStatus')
    op.drop_table('ObjectStatus')
    # ### end Alembic commands ###
