"""empty message

Revision ID: 7f5d3c208bc1
Revises: 
Create Date: 2023-07-18 11:55:22.894306

"""
import sqlmodel
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7f5d3c208bc1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('StringDefectTypes',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('eng_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('short_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('eng_name'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('short_name')
    )
    op.create_index(op.f('ix_StringDefectTypes_id'), 'StringDefectTypes', ['id'], unique=False)
    op.create_table('TowerDefectTypes',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('eng_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('short_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('eng_name'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('short_name')
    )
    op.create_index(op.f('ix_TowerDefectTypes_id'), 'TowerDefectTypes', ['id'], unique=False)
    op.create_table('TrackDefectTypes',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('eng_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('eng_name'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_TrackDefectTypes_id'), 'TrackDefectTypes', ['id'], unique=False)
    op.create_table('WireDefectTypes',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('eng_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('short_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('eng_name'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('short_name')
    )
    op.create_index(op.f('ix_WireDefectTypes_id'), 'WireDefectTypes', ['id'], unique=False)
    op.create_table('StringDefects',
    sa.Column('defect_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('string_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('flight_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('coordinates', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('photo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['defect_id'], ['StringDefectTypes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_StringDefects_id'), 'StringDefects', ['id'], unique=False)
    op.create_table('StringDefectsHistory',
    sa.Column('main_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('defect_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('string_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('flight_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('coordinates', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('photo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['defect_id'], ['StringDefectTypes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_StringDefectsHistory_id'), 'StringDefectsHistory', ['id'], unique=False)
    op.create_table('TowerDefects',
    sa.Column('defect_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('tower_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('flight_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('coordinates', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('photo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['defect_id'], ['TowerDefectTypes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_TowerDefects_id'), 'TowerDefects', ['id'], unique=False)
    op.create_table('TowerDefectsHistory',
    sa.Column('main_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('defect_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('tower_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('flight_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('coordinates', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('photo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['defect_id'], ['TowerDefectTypes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_TowerDefectsHistory_id'), 'TowerDefectsHistory', ['id'], unique=False)
    op.create_table('TrackDefects',
    sa.Column('defect_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('span_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('flight_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('coordinates', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('photo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['defect_id'], ['TrackDefectTypes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_TrackDefects_id'), 'TrackDefects', ['id'], unique=False)
    op.create_table('WireDefects',
    sa.Column('defect_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('wire_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('flight_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('coordinates', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('photo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('distance_from_tower_1', sa.Float(), nullable=True),
    sa.Column('distance_from_tower_2', sa.Float(), nullable=True),
    sa.Column('is_confirmed', sa.Boolean(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['defect_id'], ['WireDefectTypes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_WireDefects_id'), 'WireDefects', ['id'], unique=False)
    op.create_table('WireDefectsHistory',
    sa.Column('main_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('defect_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('wire_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('flight_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('coordinates', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('photo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('distance_from_tower_1', sa.Float(), nullable=True),
    sa.Column('distance_from_tower_2', sa.Float(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['defect_id'], ['WireDefectTypes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_WireDefectsHistory_id'), 'WireDefectsHistory', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_WireDefectsHistory_id'), table_name='WireDefectsHistory')
    op.drop_table('WireDefectsHistory')
    op.drop_index(op.f('ix_WireDefects_id'), table_name='WireDefects')
    op.drop_table('WireDefects')
    op.drop_index(op.f('ix_TrackDefects_id'), table_name='TrackDefects')
    op.drop_table('TrackDefects')
    op.drop_index(op.f('ix_TowerDefectsHistory_id'), table_name='TowerDefectsHistory')
    op.drop_table('TowerDefectsHistory')
    op.drop_index(op.f('ix_TowerDefects_id'), table_name='TowerDefects')
    op.drop_table('TowerDefects')
    op.drop_index(op.f('ix_StringDefectsHistory_id'), table_name='StringDefectsHistory')
    op.drop_table('StringDefectsHistory')
    op.drop_index(op.f('ix_StringDefects_id'), table_name='StringDefects')
    op.drop_table('StringDefects')
    op.drop_index(op.f('ix_WireDefectTypes_id'), table_name='WireDefectTypes')
    op.drop_table('WireDefectTypes')
    op.drop_index(op.f('ix_TrackDefectTypes_id'), table_name='TrackDefectTypes')
    op.drop_table('TrackDefectTypes')
    op.drop_index(op.f('ix_TowerDefectTypes_id'), table_name='TowerDefectTypes')
    op.drop_table('TowerDefectTypes')
    op.drop_index(op.f('ix_StringDefectTypes_id'), table_name='StringDefectTypes')
    op.drop_table('StringDefectTypes')
    # ### end Alembic commands ###
